buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

plugins {
    // Base
    id 'java'

    // Publishing on bintray
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7'
}

apply plugin: 'maven'

def app_version = '0.11.1'

targetCompatibility = '1.7'
sourceCompatibility = '1.7'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Dependency: Msgpack serialization
    compile group: 'org.json', name: 'json', version: '20160810'
    compile 'org.msgpack:msgpack-core:0.8.+'
    compile 'org.msgpack:jackson-dataformat-msgpack:0.8.+'

    // Dependency: WebSockets
    compile 'com.neovisionaries:nv-websocket-client:2.+'

    // Dependency: Binary chunking
    compile 'org.saltyrtc.chunked-dc:chunked-dc:1.0.0'

    // Test dependencies
    testCompile 'org.slf4j:slf4j-simple:1.7.21'
    testCompile 'junit:junit:4.12'
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardError"
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        SaltyRTC(MavenPublication) {
            from components.java
            groupId 'org.saltyrtc.client'
            artifactId 'saltyrtc-client'
            version app_version
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

// Upload to Bintray
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['SaltyRTC']
    pkg {
        repo = 'maven'
        name = 'saltyrtc-client'
        userOrg = 'saltyrtc'
        desc = 'Java client for SaltyRTC.'
        websiteUrl = 'http://saltyrtc.org/'
        issueTrackerUrl = 'https://github.com/saltyrtc/saltyrtc-client-java/issues'
        vcsUrl = 'https://github.com/saltyrtc/saltyrtc-client-java.git'
        githubRepo = 'saltyrtc/saltyrtc-client-java'
        publicDownloadNumbers = true
        licenses = ['MIT', 'Apache-2.0']
        labels = ['saltyrtc', 'webrtc', 'ortc', 'data channels', 'signaling', 'secure']
        version {
            name = app_version
            desc = 'SaltyRTC Java Client v${app_version}'
            released = new Date()
            vcsTag = 'v${app_version}'
        }
    }
}

// Upload to local Maven repo for testing
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('/tmp/maven/'))
            pom.version = app_version
            pom.groupId = 'org.saltyrtc.client'
            pom.artifactId = 'saltyrtc-client'
        }
    }
}
